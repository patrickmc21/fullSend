// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RideContainer should match the snapshot 1`] = `undefined`;

exports[`RideContainer should match the snapshot if no rides present 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <RideContainer
    rides={Array []}
    updateRides={[Function]}
    user={
        Object {
            "id": 12,
            "name": "Pat",
            "token": "2y589wyhgfiouqehr8to8",
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <withRouter(Connect(DateSelector)) />,
        <button
          className="update-rides"
          onClick={[Function]}
>
          Update Rides
</button>,
        <Route
          exact={true}
          path="/main/rides"
          render={[Function]}
/>,
      ],
      "className": "ride-container",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {},
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": "Update Rides",
          "className": "update-rides",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": "Update Rides",
        "type": "button",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "exact": true,
          "path": "/main/rides",
          "render": [Function],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
    ],
    "type": "section",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <withRouter(Connect(DateSelector)) />,
          <button
            className="update-rides"
            onClick={[Function]}
>
            Update Rides
</button>,
          <Route
            exact={true}
            path="/main/rides"
            render={[Function]}
/>,
        ],
        "className": "ride-container",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": "Update Rides",
            "className": "update-rides",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": "Update Rides",
          "type": "button",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "exact": true,
            "path": "/main/rides",
            "render": [Function],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "section",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
